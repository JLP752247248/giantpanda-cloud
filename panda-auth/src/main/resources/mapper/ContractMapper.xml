<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.panda.auth.user.dao.ContractMapper">
  <!-- 结果集映射 -->
  <resultMap id="BaseResultMap" type="com.panda.auth.user.entity.Contract">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="skype" jdbcType="VARCHAR" property="skype" />
    <result column="facebook" jdbcType="VARCHAR" property="facebook" />
    <result column="linkedin" jdbcType="VARCHAR" property="linkedin" />
    <result column="website" jdbcType="VARCHAR" property="website" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  
  <!-- 属性列表 -->
  <sql id="Base_Column_List">
    <trim suffixOverrides=",">
      user_id,
      email,
      phone,
      skype,
      facebook,
      linkedin,
      website,
      note,
    </trim>
  </sql>
  
  <!-- 普通插入属性列表，注意与Base_Column_List属性列表一一对应 -->
  <sql id="Insert_Property_List">
    <trim suffixOverrides=",">
      #{data.userId,jdbcType=BIGINT},
      #{data.email,jdbcType=VARCHAR},
      #{data.phone,jdbcType=VARCHAR},
      #{data.skype,jdbcType=VARCHAR},
      #{data.facebook,jdbcType=VARCHAR},
      #{data.linkedin,jdbcType=VARCHAR},
      #{data.website,jdbcType=VARCHAR},
      #{data.note,jdbcType=VARCHAR},
    </trim>
  </sql>
  
  <!-- 普通修改属性列表（非主键属性） -->
  <sql id="Update_Property_List">
    <trim suffixOverrides=",">
      email = #{data.email,jdbcType=VARCHAR},
      phone = #{data.phone,jdbcType=VARCHAR},
      skype = #{data.skype,jdbcType=VARCHAR},
      facebook = #{data.facebook,jdbcType=VARCHAR},
      linkedin = #{data.linkedin,jdbcType=VARCHAR},
      website = #{data.website,jdbcType=VARCHAR},
      note = #{data.note,jdbcType=VARCHAR},
    </trim>
  </sql>
  
  <!-- 动态修改属性列表（非主键属性） -->
  <sql id="Update_Selective_Property_List">
    <trim suffixOverrides=",">
      <if test="data.email != null">
        email = #{data.email,jdbcType=VARCHAR},
      </if>
      <if test="data.phone != null">
        phone = #{data.phone,jdbcType=VARCHAR},
      </if>
      <if test="data.skype != null">
        skype = #{data.skype,jdbcType=VARCHAR},
      </if>
      <if test="data.facebook != null">
        facebook = #{data.facebook,jdbcType=VARCHAR},
      </if>
      <if test="data.linkedin != null">
        linkedin = #{data.linkedin,jdbcType=VARCHAR},
      </if>
      <if test="data.website != null">
        website = #{data.website,jdbcType=VARCHAR},
      </if>
      <if test="data.note != null">
        note = #{data.note,jdbcType=VARCHAR},
      </if>
    </trim>
  </sql>
  
  <!-- 动态查询属性列表（所有属性） -->
  <sql id="Select_Selective_Property_List">
    <trim suffixOverrides=",">
      <if test="userId != null">
        and user_id = #{userId,jdbcType=BIGINT}
      </if>
      <if test="email != null">
        and email = #{email,jdbcType=VARCHAR}
      </if>
      <if test="phone != null">
        and phone = #{phone,jdbcType=VARCHAR}
      </if>
      <if test="skype != null">
        and skype = #{skype,jdbcType=VARCHAR}
      </if>
      <if test="facebook != null">
        and facebook = #{facebook,jdbcType=VARCHAR}
      </if>
      <if test="linkedin != null">
        and linkedin = #{linkedin,jdbcType=VARCHAR}
      </if>
      <if test="website != null">
        and website = #{website,jdbcType=VARCHAR}
      </if>
      <if test="note != null">
        and note = #{note,jdbcType=VARCHAR}
      </if>
    </trim>
  </sql>
  
  <insert id="insert">
    insert into sys_contact
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <include refid="Base_Column_List" />
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <include refid="Insert_Property_List" />
    </trim>
  </insert>
  <insert id="insertBatch">
    insert into sys_contact
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <include refid="Base_Column_List" />
    </trim>
    values
    <foreach collection="dataCollection" item="data" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <include refid="Insert_Property_List" />
      </trim>
    </foreach>
  </insert>
  <update id="updateByPrimaryKey">
    update sys_contact
    <set>
      <include refid="Update_Property_List" />
    </set>
    where user_id = #{data.userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeySelective">
    update sys_contact
    <set>
      <include refid="Update_Selective_Property_List" />
    </set>
    where user_id = #{data.userId,jdbcType=BIGINT}
  </update>
  <update id="updateBatch">
    <foreach collection="dataCollection" item="data" separator=";">
      update sys_contact
      <set>
        <include refid="Update_Selective_Property_List" />
      </set>
      where user_id = #{data.userId,jdbcType=BIGINT}
    </foreach>
  </update>
  <delete id="deleteByPrimaryKey">
    delete from sys_contact
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByIdCollection">
    delete from sys_contact
    <where>
      <choose>
        <when test="idCollection == null or idCollection.size == 0">
          and false
        </when>
        <otherwise>
          and user_id in 
          <foreach close=")" collection="idCollection" item="id" open="(" separator=",">
            #{id,jdbcType=BIGINT}
          </foreach>
        </otherwise>
      </choose>
    </where>
  </delete>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_contact
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
  <select id="selectByIdCollection" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_contact
    <where>
      <choose>
        <when test="idCollection == null or idCollection.size == 0">
          and false
        </when>
        <otherwise>
          and user_id in 
          <foreach close=")" collection="idCollection" item="id" open="(" separator=",">
            #{id,jdbcType=BIGINT}
          </foreach>
        </otherwise>
      </choose>
    </where>
  </select>
  <select id="listSelective" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_contact
    <where>
      <include refid="Select_Selective_Property_List" />
    </where>
  </select>
  <select id="listQuery" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_contact
  </select>
  
  <!-- 以上代码由MbgCode自动生成2022-08-10 15:10:40 -->



  <!-- 以下为您的代码 -->
  
</mapper>